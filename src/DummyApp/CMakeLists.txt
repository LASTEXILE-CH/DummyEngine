cmake_minimum_required(VERSION 3.1)
project(DummyApp)

if(NOT CMAKE_SYSTEM_NAME MATCHES "Android")
    if(WIN32)
        if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
            if(CMAKE_SIZEOF_VOID_P EQUAL 8)
                set(SDL2_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/SDL2/x86_64-w64-mingw32/include)
                set(SDL2_LIBRARIES "${CMAKE_CURRENT_SOURCE_DIR}/SDL2/x86_64-w64-mingw32/lib")
            else(CMAKE_SIZEOF_VOID_P EQUAL 8)
                set(SDL2_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/SDL2/i686-w64-mingw32/include)
                set(SDL2_LIBRARIES "${CMAKE_CURRENT_SOURCE_DIR}/SDL2/i686-w64-mingw32/lib")
            endif()
        elseif ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "MSVC")
            if(CMAKE_SIZEOF_VOID_P EQUAL 8)
                set(SDL2_LIBRARIES "${CMAKE_CURRENT_SOURCE_DIR}/SDL2/lib/x64")
            else(CMAKE_SIZEOF_VOID_P EQUAL 8)
                set(SDL2_LIBRARIES "${CMAKE_CURRENT_SOURCE_DIR}/SDL2/lib/x86")
            endif()
            set(SDL2_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/SDL2/include)
        endif()
    else(WIN32)
        include(FindPkgConfig)
        pkg_search_module (SDL2 REQUIRED sdl2)

        if(APPLE)
            set(SDL2_INCLUDE_DIRS /usr/local/include)
            set(SDL2_LIBRARIES /usr/local/lib)
        endif(APPLE)
    endif(WIN32)
    
    include_directories(${SDL2_INCLUDE_DIRS})
    link_directories(${SDL2_LIBRARIES})
    
    IF(WIN32)
        IF(SDL_STATIC)
            if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
                set(LIBS :libSDL2main.a :libSDL2.a :libSDL2_mixer.a winmm imm32 version)
            elseif ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "MSVC")
                set(LIBS SDL2main.lib SDL2.lib winmm imm32 version)
            endif()
        ELSE(SDL_STATIC)
            if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
                set(LIBS opengl32 SDL2 SDL2_mixer)
            elseif ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "MSVC")
                set(LIBS opengl32 SDL2 SDL2_mixer)
            endif()
        ENDIF(SDL_STATIC)
    ELSE(WIN32)
        #set(LIBS X11 :libSDL2.a dl pthread GL glut c)
        set(LIBS X11 SDL2 dl pthread GL glut c)
    ENDIF(WIN32)
else()
	set(LIBS android log)
endif()

set(SOURCE_FILES    DummyApp.h
                    DummyApp.cpp)

if(NOT CMAKE_SYSTEM_NAME MATCHES "Android")
	list(APPEND SOURCE_FILES main_pc.cpp)
else()
    list(APPEND SOURCE_FILES main_android.cpp)
endif()

list(APPEND ALL_SOURCE_FILES ${SOURCE_FILES})
#set_source_files_properties(${SOURCE_FILES} PROPERTIES HEADER_FILE_ONLY TRUE)
source_group("src" FILES ${SOURCE_FILES})

if(NOT CMAKE_SYSTEM_NAME MATCHES "Android")
	add_executable(DummyApp ${ALL_SOURCE_FILES})
else()
	add_library(DummyApp SHARED ${ALL_SOURCE_FILES})
endif()

target_link_libraries(DummyApp DummyLib ${LIBS})

add_custom_command(TARGET DummyApp 
                   POST_BUILD
                   COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:DummyApp> ${WORKING_DIRECTORY})
                   
set_target_properties(DummyApp PROPERTIES VS_DEBUGGER_WORKING_DIRECTORY "${WORKING_DIRECTORY}")